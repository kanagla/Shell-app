name: Build & Deploy Shell App with Remote

on:
  push:
    branches: ["main"]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy-shell:
    name: Build & Deploy Shell App with Remote
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # âœ… This runs the postbuild script to copy files to shell-app/public/...
      # No extra step needed if you already added the postbuild script

      # --- SHELL APP BUILD ---
      - name: Install Shell App Dependencies
        run: npm ci

      - name: Build Shell App
        run: npm run build

      # --- AWS DEPLOY ---
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Docker Image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: shell-app
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-shell.json
          service: shell-task-def-service-trrqb7eh
          cluster: shell-cluster
          wait-for-service-stability: true
